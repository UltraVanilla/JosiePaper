From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Thu, 4 Nov 2021 11:50:35 -0700
Subject: [PATCH] Add isCollidable methods to various places


diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java
index 663d2ce14030a54b83c7e9aebad48f8fd6c41b69..56e5ab93096801277ec5162981ddf5275d2c7669 100644
--- a/src/main/java/org/bukkit/Material.java
+++ b/src/main/java/org/bukkit/Material.java
@@ -4031,6 +4031,16 @@ public enum Material implements Keyed, net.kyori.adventure.translation.Translata
     public Multimap<Attribute, AttributeModifier> getItemAttributes(@NotNull EquipmentSlot equipmentSlot) {
         return Bukkit.getUnsafe().getItemAttributes(this, equipmentSlot);
     }
+
+    /**
+     * Checks if this material is collidable.
+     *
+     * @return true if collidable
+     * @throws IllegalArgumentException if {@link #isBlock()} is false
+     */
+    public boolean isCollidable() {
+        return Bukkit.getUnsafe().isCollidable(this);
+    }
     // Paper end
 
     /**
diff --git a/src/main/java/org/bukkit/UnsafeValues.java b/src/main/java/org/bukkit/UnsafeValues.java
index ae55b9e3560ba63bc95f90ceadccc6492be9de56..7406c413f2988f2aadac95a85801df30deb6ae43 100644
--- a/src/main/java/org/bukkit/UnsafeValues.java
+++ b/src/main/java/org/bukkit/UnsafeValues.java
@@ -207,5 +207,14 @@ public interface UnsafeValues {
      * @throws IllegalArgumentException if the entity does not exist of have default attributes (use {@link #hasDefaultEntityAttributes(NamespacedKey)} first)
      */
     @org.jetbrains.annotations.NotNull org.bukkit.attribute.Attributable getDefaultEntityAttributes(@org.jetbrains.annotations.NotNull NamespacedKey entityKey);
+
+    /**
+     * Checks if this material is collidable.
+     *
+     * @param material the material to check
+     * @return true if collidable
+     * @throws IllegalArgumentException if {@link Material#isBlock()} is false
+     */
+    boolean isCollidable(@org.jetbrains.annotations.NotNull Material material);
     // Paper end
 }
diff --git a/src/main/java/org/bukkit/block/Block.java b/src/main/java/org/bukkit/block/Block.java
index d789f14d7af2fbe1a653040f3014748acfc3b240..5f35ba35f8517ec28c1b21b3007c9a20dea097a7 100644
--- a/src/main/java/org/bukkit/block/Block.java
+++ b/src/main/java/org/bukkit/block/Block.java
@@ -481,6 +481,13 @@ public interface Block extends Metadatable, net.kyori.adventure.translation.Tran
      * @return true if block is solid
      */
     boolean isSolid();
+
+    /**
+     * Checks if this block is collidable.
+     *
+     * @return true if collidable
+     */
+    boolean isCollidable();
     // Paper end
 
     /**
diff --git a/src/main/java/org/bukkit/block/BlockState.java b/src/main/java/org/bukkit/block/BlockState.java
index 631cbf2be51040eee00aa39a39c5ec4003f91843..96cde879922c796f3ac8d14ee99d7b190ff67bd9 100644
--- a/src/main/java/org/bukkit/block/BlockState.java
+++ b/src/main/java/org/bukkit/block/BlockState.java
@@ -221,4 +221,13 @@ public interface BlockState extends Metadatable {
      *         or 'virtual' (e.g. on an itemstack)
      */
     boolean isPlaced();
+
+    // Paper start
+    /**
+     * Checks if this block state is collidable.
+     *
+     * @return true if collidable
+     */
+    boolean isCollidable();
+    // Paper end
 }
