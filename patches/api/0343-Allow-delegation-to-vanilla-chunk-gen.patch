From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MiniDigger <admin@benndorf.dev>
Date: Wed, 29 Apr 2020 02:09:17 +0200
Subject: [PATCH] Allow delegation to vanilla chunk gen


diff --git a/src/main/java/org/bukkit/Bukkit.java b/src/main/java/org/bukkit/Bukkit.java
index b0d2d45ad2394313be752e92bc594095bfc93120..85dc2bf97175207bcc169d5d7e0d86dae39aecf2 100644
--- a/src/main/java/org/bukkit/Bukkit.java
+++ b/src/main/java/org/bukkit/Bukkit.java
@@ -1907,6 +1907,24 @@ public final class Bukkit {
         return server.createChunkData(world);
     }
 
+    // Paper start
+    /**
+     * Create a ChunkData for use in a generator, that is populated by the vanilla generator for that world
+     *
+     * @param world the world to create the ChunkData for
+     * @param x the x coordinate of the chunk
+     * @param z the z coordinate of the chunk
+     * @return a new ChunkData for the world
+     * @deprecated The new multi-stage worldgen API allows a similar effect by overriding all of the "shouldGenerate..." methods to
+     * return true, and then modifying the chunkdata in a later stage such as surface or bedrock generation.
+     */
+    @NotNull
+    @Deprecated(forRemoval = true)
+    public static ChunkGenerator.ChunkData createVanillaChunkData(@NotNull World world, int x, int z) {
+        return server.createVanillaChunkData(world, x, z);
+    }
+    // Paper stop
+
     /**
      * Creates a boss bar instance to display to players. The progress
      * defaults to 1.0
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index a11d02cc17b1e9bea06ab61cd3ae21c3c41aaceb..c07eef17aac9140e1f461aa20e3a90fcb3f4ae74 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -1602,6 +1602,22 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
     @NotNull
     public ChunkGenerator.ChunkData createChunkData(@NotNull World world);
 
+    // Paper start
+    /**
+     * Create a ChunkData for use in a generator, that is populated by the vanilla generator for that world.
+     *
+     * @param world the world to create the ChunkData for
+     * @param x the x coordinate of the chunk
+     * @param z the z coordinate of the chunk
+     * @return a new ChunkData for the world
+     * @deprecated The new multi-stage worldgen API allows a similar effect by overriding all of the "shouldGenerate..." methods to
+     * return true, and then modifying the chunkdata in a later stage such as surface or bedrock generation.
+     */
+    @NotNull
+    @Deprecated(forRemoval = true)
+    ChunkGenerator.ChunkData createVanillaChunkData(@NotNull World world, int x, int z);
+    // Paper end
+
     /**
      * Creates a boss bar instance to display to players. The progress
      * defaults to 1.0
diff --git a/src/main/java/org/bukkit/generator/ChunkGenerator.java b/src/main/java/org/bukkit/generator/ChunkGenerator.java
index acba500393e1736e6081facac6ef9ab10da655de..f1f60710ea44a078aa071dbf2d5c0ed3724e31b3 100644
--- a/src/main/java/org/bukkit/generator/ChunkGenerator.java
+++ b/src/main/java/org/bukkit/generator/ChunkGenerator.java
@@ -577,6 +577,22 @@ public abstract class ChunkGenerator {
         return false;
     }
 
+    // Paper start
+    /**
+     * Create a ChunkData for use in a generator, that is populated by the vanilla generator for that world
+     *
+     * @param world the world to create the ChunkData for
+     * @param x the x coordinate of the chunk
+     * @param z the z coordinate of the chunk
+     * @return a new ChunkData for the world
+     *
+     */
+    @NotNull
+    public ChunkData createVanillaChunkData(@NotNull World world, int x, int z) {
+        return Bukkit.getServer().createVanillaChunkData(world, x, z);
+    }
+    // Paper end
+
     /**
      * Gets if the server should generate Vanilla structures after this
      * ChunkGenerator.
