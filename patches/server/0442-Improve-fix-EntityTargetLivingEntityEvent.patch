From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Fri, 9 Dec 2022 03:10:23 -0800
Subject: [PATCH] Improve/fix EntityTargetLivingEntityEvent


diff --git a/src/main/java/net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid.java b/src/main/java/net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid.java
index 7ae873f391b1c22a57f504490eabe7da558a6ec2..212e307077dfa274a4d4e4192760de23a75ef12a 100644
--- a/src/main/java/net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid.java
+++ b/src/main/java/net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid.java
@@ -47,17 +47,30 @@ public class StopAttackingIfTargetInvalid {
                     if (entityinsentient.canAttack(entityliving) && (!shouldForgetIfTargetUnreachable || !StopAttackingIfTargetInvalid.isTiredOfTryingToReachTarget(entityinsentient, behaviorbuilder_b.tryGet(memoryaccessor1))) && entityliving.isAlive() && entityliving.level == entityinsentient.level && !alternativeCondition.test(entityliving)) {
                         return true;
                     } else {
+                        // Paper start - better track target change reason
+                        final EntityTargetEvent.TargetReason reason;
+                        if (!entityinsentient.canAttack(entityliving)) {
+                            reason = EntityTargetEvent.TargetReason.TARGET_INVALID;
+                        } else if (shouldForgetIfTargetUnreachable && StopAttackingIfTargetInvalid.isTiredOfTryingToReachTarget(entityinsentient, behaviorbuilder_b.tryGet(memoryaccessor1))) {
+                            reason = EntityTargetEvent.TargetReason.FORGOT_TARGET;
+                        } else if (!entityliving.isAlive()) {
+                            reason = EntityTargetEvent.TargetReason.TARGET_DIED;
+                        } else if (entityliving.level != entityinsentient.level) {
+                            reason = EntityTargetEvent.TargetReason.TARGET_OTHER_LEVEL;
+                        } else {
+                            reason = EntityTargetEvent.TargetReason.TARGET_INVALID;
+                        }
+                        // Paper end
                         // CraftBukkit start
-                        LivingEntity old = entityinsentient.getBrain().getMemory(MemoryModuleType.ATTACK_TARGET).orElse(null);
-                        EntityTargetEvent event = CraftEventFactory.callEntityTargetLivingEvent(entityinsentient, null, (old != null && !old.isAlive()) ? EntityTargetEvent.TargetReason.TARGET_DIED : EntityTargetEvent.TargetReason.FORGOT_TARGET);
+                        EntityTargetEvent event = CraftEventFactory.callEntityTargetLivingEvent(entityinsentient, null, reason); // Paper
                         if (event.isCancelled()) {
                             return false;
                         }
-                        if (event.getTarget() == null) {
-                            memoryaccessor.erase();
-                            return true;
-                        }
-                        entityliving = ((CraftLivingEntity) event.getTarget()).getHandle();
+                        // if (event.getTarget() == null) { // Paper - this is wrong, you are skipping the forgetCallback
+                        //     memoryaccessor.erase();
+                        //     return true;
+                        // }
+                        // entityliving = ((CraftLivingEntity) event.getTarget()).getHandle();
                         // CraftBukkit end
                         forgetCallback.accept(entityinsentient, entityliving);
                         memoryaccessor.erase();
