From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Fri, 12 Mar 2021 17:09:42 -0800
Subject: [PATCH] Item Rarity API


diff --git a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
index 9374dd74d42e005b7573800d3e9a356e1c57ea86..9cd69efe2923fd4c1680d386b8c16084359561c4 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
@@ -517,6 +517,20 @@ public final class CraftMagicNumbers implements UnsafeValues {
     public <T extends org.bukkit.Keyed> Registry<T> registryFor(Class<T> classOfT) {
         return io.papermc.paper.registry.PaperRegistry.getRegistry(classOfT);
     }
+
+    @Override
+    public io.papermc.paper.inventory.ItemRarity getItemRarity(org.bukkit.Material material) {
+        Item item = getItem(material);
+        if (item == null) {
+            throw new IllegalArgumentException(material + " is not an item, and rarity does not apply to blocks");
+        }
+        return io.papermc.paper.inventory.ItemRarity.values()[item.rarity.ordinal()];
+    }
+
+    @Override
+    public io.papermc.paper.inventory.ItemRarity getItemStackRarity(org.bukkit.inventory.ItemStack itemStack) {
+        return io.papermc.paper.inventory.ItemRarity.values()[getItem(itemStack.getType()).getRarity(CraftItemStack.asNMSCopy(itemStack)).ordinal()];
+    }
     // Paper end
 
     /**
diff --git a/src/test/java/io/papermc/paper/inventory/ItemRarityTest.java b/src/test/java/io/papermc/paper/inventory/ItemRarityTest.java
new file mode 100644
index 0000000000000000000000000000000000000000..38e6d42098f216b1d24f50386e7be98181122d8d
--- /dev/null
+++ b/src/test/java/io/papermc/paper/inventory/ItemRarityTest.java
@@ -0,0 +1,24 @@
+package io.papermc.paper.inventory;
+
+import io.papermc.paper.adventure.PaperAdventure;
+import net.minecraft.world.item.Rarity;
+import org.junit.Test;
+
+import static org.junit.Assert.assertEquals;
+
+public class ItemRarityTest {
+
+    @Test
+    public void testConvertFromNmsToBukkit() {
+        for (Rarity nmsRarity : Rarity.values()) {
+            assertEquals("rarity names are mis-matched", ItemRarity.values()[nmsRarity.ordinal()].name(), nmsRarity.name());
+        }
+    }
+
+    @Test
+    public void testRarityFormatting() {
+        for (Rarity nmsRarity : Rarity.values()) {
+            assertEquals("rarity formatting is mis-matched", nmsRarity.color, PaperAdventure.asVanilla(ItemRarity.values()[nmsRarity.ordinal()].color));
+        }
+    }
+}
