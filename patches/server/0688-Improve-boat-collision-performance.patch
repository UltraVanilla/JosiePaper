From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spottedleaf <spottedleaf@spottedleaf.dev>
Date: Mon, 2 Aug 2021 10:10:40 +0200
Subject: [PATCH] Improve boat collision performance


diff --git a/src/main/java/net/minecraft/Util.java b/src/main/java/net/minecraft/Util.java
index 70b8b86ed827217e536e35a690160adf9e974bb5..5f9e3d37c3ba79d26806374d73f87328cebb562d 100644
--- a/src/main/java/net/minecraft/Util.java
+++ b/src/main/java/net/minecraft/Util.java
@@ -94,6 +94,7 @@ public class Util {
     }).findFirst().orElseThrow(() -> {
         return new IllegalStateException("No jar file system provider found");
     });
+    public static final double COLLISION_EPSILON = 1.0E-7; // Paper
     private static Consumer<String> thePauser = (message) -> {
     };
 
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 378c0848db27a45c79acff43aa6068d1852a3beb..84d8edf3afe0a2a41092d8d2a0b940d1b949da8b 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -1341,7 +1341,7 @@ public abstract class LivingEntity extends Entity {
                 if (!source.isProjectile()) {
                     Entity entity = source.getDirectEntity();
 
-                    if (entity instanceof LivingEntity) {
+                    if (entity instanceof LivingEntity && entity.distanceToSqr(this) <= (200.0D * 200.0D)) { // Paper
                         this.blockUsingShield((LivingEntity) entity);
                     }
                 }
@@ -1449,11 +1449,12 @@ public abstract class LivingEntity extends Entity {
                 }
 
                 if (entity1 != null) {
-                    double d0 = entity1.getX() - this.getX();
+                    final boolean far = entity1.distanceToSqr(this) > (200.0 * 200.0); // Paper
+                    double d0 = far ? (Math.random() - Math.random()) : entity1.getX() - this.getX(); // Paper
 
                     double d1;
 
-                    for (d1 = entity1.getZ() - this.getZ(); d0 * d0 + d1 * d1 < 1.0E-4D; d1 = (Math.random() - Math.random()) * 0.01D) {
+                    for (d1 = far ? Math.random() - Math.random() : entity1.getZ() - this.getZ(); d0 * d0 + d1 * d1 < 1.0E-4D; d1 = (Math.random() - Math.random()) * 0.01D) { // Paper
                         d0 = (Math.random() - Math.random()) * 0.01D;
                     }
 
@@ -2141,7 +2142,7 @@ public abstract class LivingEntity extends Entity {
                 this.hurtCurrentlyUsedShield((float) -event.getDamage(DamageModifier.BLOCKING));
                 Entity entity = damagesource.getDirectEntity();
 
-                if (entity instanceof LivingEntity) {
+                if (entity instanceof LivingEntity && entity.distanceToSqr(this) <= (200.0D * 200.0D)) { // Paper
                     this.blockUsingShield((LivingEntity) entity);
                 }
             }
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/Boat.java b/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
index 502a04ba27184f66e85b2ca31d92f5f306922f4b..eb753323f67badb1bed28405c07b03078e322b44 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
@@ -691,8 +691,8 @@ public class Boat extends Entity {
         this.invFriction = 0.05F;
         if (this.oldStatus == Boat.Status.IN_AIR && this.status != Boat.Status.IN_AIR && this.status != Boat.Status.ON_LAND) {
             this.waterLevel = this.getY(1.0D);
-            this.setPos(this.getX(), (double) (this.getWaterLevelAbove() - this.getBbHeight()) + 0.101D, this.getZ());
-            this.setDeltaMovement(this.getDeltaMovement().multiply(1.0D, 0.0D, 1.0D));
+            this.move(MoverType.SELF, new Vec3(0.0, ((double) (this.getWaterLevelAbove() - this.getBbHeight()) + 0.101D) - this.getY(), 0.0)); // Paper
+            this.setDeltaMovement(this.getDeltaMovement().multiply(1.0D, 0.0D, 1.0D)); // Paper
             this.lastYd = 0.0D;
             this.status = Boat.Status.IN_WATER;
         } else {
