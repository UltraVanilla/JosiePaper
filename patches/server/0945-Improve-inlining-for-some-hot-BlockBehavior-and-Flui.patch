From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Spottedleaf <Spottedleaf@users.noreply.github.com>
Date: Mon, 6 Jul 2020 20:46:50 -0700
Subject: [PATCH] Improve inlining for some hot BlockBehavior and FluidState
 methods


diff --git a/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java b/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java
index 9ebc53d434737c8cd39073470b2b5fcbad167812..25ce337ed266be7bafeacd9eb6f53a9474775fc5 100644
--- a/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java
+++ b/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java
@@ -851,15 +851,15 @@ public abstract class BlockBehaviour implements FeatureElement {
             return this.shapeExceedsCube; // Paper - moved into shape cache init
         }
 
-        public boolean useShapeForLightOcclusion() {
+        public final boolean useShapeForLightOcclusion() { // Paper
             return this.useShapeForLightOcclusion;
         }
 
-        public int getLightEmission() {
+        public final int getLightEmission() { // Paper
             return this.lightEmission;
         }
 
-        public boolean isAir() {
+        public final boolean isAir() { // Paper
             return this.isAir;
         }
 
@@ -933,7 +933,7 @@ public abstract class BlockBehaviour implements FeatureElement {
             }
         }
 
-        public boolean canOcclude() {
+        public final boolean canOcclude() { // Paper
             return this.canOcclude;
         }
 
@@ -1135,11 +1135,11 @@ public abstract class BlockBehaviour implements FeatureElement {
             return this.getBlock() == block;
         }
 
-        public FluidState getFluidState() {
+        public final FluidState getFluidState() { // Paper
             return this.fluidState;
         }
 
-        public boolean isRandomlyTicking() {
+        public final boolean isRandomlyTicking() { // Paper
             return this.isRandomlyTicking;
         }
 
diff --git a/src/main/java/net/minecraft/world/level/material/FluidState.java b/src/main/java/net/minecraft/world/level/material/FluidState.java
index ea2a04e5298832177fac93568656ac45784d5eb6..27f136815afc360387704fa1f2773e3816cccff6 100644
--- a/src/main/java/net/minecraft/world/level/material/FluidState.java
+++ b/src/main/java/net/minecraft/world/level/material/FluidState.java
@@ -26,8 +26,12 @@ public final class FluidState extends StateHolder<Fluid, FluidState> {
     public static final int AMOUNT_MAX = 9;
     public static final int AMOUNT_FULL = 8;
 
+    // Paper start
+    protected final boolean isEmpty;
+    // Paper end
     public FluidState(Fluid fluid, ImmutableMap<Property<?>, Comparable<?>> propertiesMap, MapCodec<FluidState> codec) {
         super(fluid, propertiesMap, codec);
+        this.isEmpty = fluid.isEmpty(); // Paper - moved from isEmpty()
     }
 
     public Fluid getType() {
@@ -43,7 +47,7 @@ public final class FluidState extends StateHolder<Fluid, FluidState> {
     }
 
     public boolean isEmpty() {
-        return this.getType().isEmpty();
+        return this.isEmpty; // Paper - moved into constructor
     }
 
     public float getHeight(BlockGetter world, BlockPos pos) {
